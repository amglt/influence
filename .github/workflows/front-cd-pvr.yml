name: PVR Front CD

on:
  push:
    branches: [main]
    paths:
      - front-pvr/**

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: front/

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm install
        working-directory: ${{env.working-directory}}

      - name: Create env file
        run: |
          echo "DISCORD_CLIENT_ID=${{secrets.PVR_DISCORD_CLIENT_ID}}" > .env
          echo "API_URL=${{secrets.PVR_API_URL}}" >> .env
          echo "ENABLED_MODULES=${{secrets.PVR_ENABLED_MODULES}}" >> .env
        working-directory: ${{env.working-directory}}

      - name: Build app
        run: npm run build
        working-directory: ${{env.working-directory}}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: front-artifact
          path: |
            ${{env.working-directory}}
            !${{env.working-directory}}/node_modules/**/*

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      working-directory: front-pvr/
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      NODE_ENV: production

    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: front-artifact

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - run: flyctl deploy --remote-only -c fly-pvr.toml
